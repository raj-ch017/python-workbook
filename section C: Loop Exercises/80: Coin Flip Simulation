# author: @raj-ch017

"""
Exercise 80: Coin Flip Simulation

What's the minimum number of times you have to flip a coin before you can have three consecutive
flips that result in the same outcome (either all three heads or all three tails)? What's the 
maximum number of flips that might be needed? How many flips are needed on average? In this exercise,
we will explore these questions by creating a program that simulates several series of coin flips.

Create a program that uses Python's random number generator to simulate flipping a coin several times. The simulated coin should be fair, meaning that the probability of heads is equal to the probability of tails. Your program should flip simulated coins until either 3 
consecutive heads or 3 consecutive tails occur. Display an "H" each time the outcome is heads 
and a "T" each time the outcome is tails, with all of the outcomes shown on the same line.

Then display the number of flips needed to reach 3 consecutive flips with the same outcome. 
When your program is run it should perform the simulation 10 times and report the average 
number of flips needed. 

"""

import random 

# 0 will represent Heads (H)
# 1 will represent Tails (T)

flip = 0
checker = False
check_str = ""
flip_list = []

for i in range(1,11):
    while (checker != True):
        the_val = random.randint(0,1)
        flip += 1
        check_str = check_str + str(the_val)

        if the_val == 0:
            print("H ",end="")
        elif the_val == 1:
            print("T ",end ="")
        
        if "000" in check_str or "111" in check_str:
            print("({} flips)".format(flip))
            checker = True
            
    # resetting checking conditions      
    flip_list.append(flip)
    checker = False
    check_str = ""
    flip = 0

total = sum(flip_list)

print("On average, {} flips were needed.".format(round(total/10,1)))
