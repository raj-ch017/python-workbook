# author: @raj-ch017

"""
Exercise 79: Maximum Integer

This exercise examines the provess of identifying the maximum value in a collection of integers.
Each of the integers will be randomly selected from the numbers between 1 and 100. The collection of integers may contain duplicate values, and some of the integers between 1 and 100 may not be present.

Take a moment and think about how you would handle this problem on paper. Many people would
check each integer in sequence and ask themselve if the number that they are currently considering is larger than the largest number that they have previously seen. If it is, then  they forget the previous maximum number and remember the current number as the new maximum number. This is a reasonable approach, and will result in the correct answer when the process 
is performed carefully. If you were performing this task, how many times would you expect to
need to update the maximum value and remember a new number?

While we can answer the question posed at the end of previous paragraph using probability theory,
we are going to explore it by simulating the situation. 

Create a program that begins by selecting a random integer between 1 and 100. Save this 
integer as the maximum number encountered so far. After the initial integer has been selected,
generate 99 additional random integers between 1 and 100. Check each integer as it is generated,
to see if it is larger than the maximum number encountered so far. If it is, then your program
should update the maximum number encountered and count the fact that you performed an update.
Display each integer after you generate it. Include a notation with those integers which 
represent a new maximum.

After you have displayed 100 integers with your program should display the maximum value encountered,
along with the number of times the maximum value was updated during the process. Partial output
for the program is shown below, with ... representing the remaining integers that your program 
will display. Run your program several times. Is the number of updates performed on the maximum value
what your expected? 

    30  
    74 <== update
    58
    19
    88 <== update
    ...

"""

from hashlib import new
import random 

the_max = random.randint(1,100)
count = 0

print("{}".format(the_max))

for i in range(1,100):
    new_num = random.randint(1,100)
    if new_num > the_max:
        the_max = new_num
        print("{} === update ===".format(the_max))
        count += 1
    else:
        print("{}".format(new_num))

print("Value was updated {} times".format(count))

