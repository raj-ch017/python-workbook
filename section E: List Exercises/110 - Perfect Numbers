# author: @raj-ch017

# Exercise 110: Perfect Numbers

"""
An integer (n) is said to be perfect when the sum of
all of the proper divisors of (n) is equal to (n).

For example:

    28 is a perfect number because it's proper divisors
    are 1, 2, 4, 7, 14 and 1 + 2 + 4 + 7 + 14 = 28
    
Write a function that determines whether or not a 
positive integer is perfect. Your function will take
one parameter. If that parameter is a perfect number,
then your function will return true. Otherwise, it 
will return false.

In addition, write a main program that uses your
function to identify and display all of the perfect
numbers between 1 and 10,000.

Import your solution to exercise 109 when completing
this task.
"""

def perfect_number(input_number):
    """
    Input:
        input_number: a number to check whether it's a perfect number
        
    Output:
        True if the parameter turns out to be perfect number, else
        False
    """
    
    divisor_list = proper_divisors(input_number)
    the_sum = sum(divisor_list)
    
    if the_sum == input_number:
        return True
    else:
        return False
    
quant = 0

for j in range(1,10001):
    if perfect_number(j):
        #print("{}: Yes".format(j))
        quant += 1
    else:
        #print("{}: No".format(j))
        pass

#print(quant)
print("{}%".format(quant/10000 * 100))
